"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fibonacci__factory = void 0;
var contracts_1 = require("@ethersproject/contracts");
var Fibonacci__factory = /** @class */ (function (_super) {
    __extends(Fibonacci__factory, _super);
    function Fibonacci__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    Fibonacci__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    Fibonacci__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    Fibonacci__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Fibonacci__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Fibonacci__factory.connect = function (address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    };
    return Fibonacci__factory;
}(contracts_1.ContractFactory));
exports.Fibonacci__factory = Fibonacci__factory;
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'number',
                type: 'uint256',
            },
        ],
        name: 'TestEvent',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'n',
                type: 'uint256',
            },
        ],
        name: 'doFib',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'n',
                type: 'uint256',
            },
        ],
        name: 'generateFib',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'n',
                type: 'uint256',
            },
        ],
        name: 'getFib',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'isTopLevel',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
var _bytecode = '0x608060405234801561001057600080fd5b50610345806100206000396000f3fe60806040526004361061003f5760003560e01c80632ddec39b1461004457806339f484b71461007257806390a3e3de146100a1578063c1cbf7cf146100f0575b600080fd5b6100706004803603602081101561005a57600080fd5b810190808035906020019092919050505061013f565b005b34801561007e57600080fd5b50610087610248565b604051808215151515815260200191505060405180910390f35b3480156100ad57600080fd5b506100da600480360360208110156100c457600080fd5b81019080803590602001909291905050506102d1565b6040518082815260200191505060405180910390f35b3480156100fc57600080fd5b506101296004803603602081101561011357600080fd5b81019080803590602001909291905050506102f1565b6040518082815260200191505060405180910390f35b6000600190806001815401808255809150506001900390600052602060002001600090919091909150556000600190806001815401808255809150506001900390600052602060002001600090919091909150556000600290505b8181101561020d5760008060028303815481106101b357fe5b9060005260206000200154600060018403815481106101ce57fe5b9060005260206000200154019080600181540180825580915050600190039060005260206000200160009091909190915055808060010191505061019a565b507f1440c4dd67b4344ea1905ec0318995133b550f168b4ee959a0da6b503d7d2414816040518082815260200191505060405180910390a150565b6000606473ffffffffffffffffffffffffffffffffffffffff166308bd624c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561029157600080fd5b505afa1580156102a5573d6000803e3d6000fd5b505050506040513d60208110156102bb57600080fd5b8101908080519060200190929190505050905090565b60008082815481106102df57fe5b90600052602060002001549050919050565b60006102ff6001830161013f565b610308826102d1565b905091905056fea26469706673582212202a2d22ae534477beb98ef5fa0646af1696227571341d83e2de301f0abb99c8c564736f6c634300060b0033';
