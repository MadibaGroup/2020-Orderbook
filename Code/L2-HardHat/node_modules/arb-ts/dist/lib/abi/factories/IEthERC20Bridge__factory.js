"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IEthERC20Bridge__factory = void 0;
var ethers_1 = require("ethers");
var IEthERC20Bridge__factory = /** @class */ (function () {
    function IEthERC20Bridge__factory() {
    }
    IEthERC20Bridge__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return IEthERC20Bridge__factory;
}());
exports.IEthERC20Bridge__factory = IEthERC20Bridge__factory;
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'seqNum',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'l1Address',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'l2Address',
                type: 'address',
            },
        ],
        name: 'ActivateCustomToken',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'seqNum',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'l1Address',
                type: 'address',
            },
        ],
        name: 'DeployToken',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'destination',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'seqNum',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'tokenAddress',
                type: 'address',
            },
        ],
        name: 'DepositToken',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'initialDestination',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'destination',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'erc20',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'exitNum',
                type: 'uint256',
            },
        ],
        name: 'WithdrawExecuted',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'user',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'liquidityProvider',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'erc20',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'exitNum',
                type: 'uint256',
            },
        ],
        name: 'WithdrawRedirected',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'erc20',
                type: 'address',
            },
        ],
        name: 'calculateL2TokenAddress',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'erc20',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'destination',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'maxSubmissionCost',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'maxGas',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'gasPriceBid',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: 'callHookData',
                type: 'bytes',
            },
        ],
        name: 'deposit',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'liquidityProvider',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'liquidityProof',
                type: 'bytes',
            },
            {
                internalType: 'address',
                name: 'initialDestination',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'erc20',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'exitNum',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'maxFee',
                type: 'uint256',
            },
        ],
        name: 'fastWithdrawalFromL2',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'erc20',
                type: 'address',
            },
        ],
        name: 'hasTriedDeploy',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'l2CustomTokenAddress',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'maxSubmissionCost',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'maxGas',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'gasPriceBid',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: 'refundAddress',
                type: 'address',
            },
        ],
        name: 'registerCustomL2Token',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'exitNum',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: 'erc20',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'initialDestination',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'withdrawFromL2',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
