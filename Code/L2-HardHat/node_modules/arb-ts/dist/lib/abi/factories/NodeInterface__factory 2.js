"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeInterface__factory = void 0;
var ethers_1 = require("ethers");
var NodeInterface__factory = /** @class */ (function () {
    function NodeInterface__factory() {
    }
    NodeInterface__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return NodeInterface__factory;
}());
exports.NodeInterface__factory = NodeInterface__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'batchNum',
                type: 'uint256',
            },
            {
                internalType: 'uint64',
                name: 'index',
                type: 'uint64',
            },
        ],
        name: 'lookupMessageBatchProof',
        outputs: [
            {
                internalType: 'bytes32[]',
                name: 'proof',
                type: 'bytes32[]',
            },
            {
                internalType: 'uint256',
                name: 'path',
                type: 'uint256',
            },
            {
                internalType: 'address',
                name: 'l2Sender',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'l1Dest',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'l2Block',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'l1Block',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: 'calldataForL1',
                type: 'bytes',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
