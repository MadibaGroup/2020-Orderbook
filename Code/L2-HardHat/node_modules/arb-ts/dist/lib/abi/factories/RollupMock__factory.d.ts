import { Signer, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { RollupMock, RollupMockInterface } from '../RollupMock';
export declare class RollupMock__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<RollupMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): RollupMock;
    connect(signer: Signer): RollupMock__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060ce8061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806314828f9214604157806327ce1def146059578063addd678414607b575b600080fd5b60476081565b60408051918252519081900360200190f35b607960048036036040811015606d57600080fd5b50803590602001356087565b005b60476092565b60005481565b600091909155600155565b6001548156fea26469706673582212200ecc187ffc470598e9b940c7c05f6e051c104c4157b2317394a65ea645bd3f7e64736f6c634300060b0033";
    static readonly abi: ({
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): RollupMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RollupMock;
}
