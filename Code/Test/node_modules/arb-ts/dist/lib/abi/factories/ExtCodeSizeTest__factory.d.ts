import { Signer, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ExtCodeSizeTest, ExtCodeSizeTestInterface } from '../ExtCodeSizeTest';
export declare class ExtCodeSizeTest__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<ExtCodeSizeTest>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): ExtCodeSizeTest;
    connect(signer: Signer): ExtCodeSizeTest__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b50601c602860201b60201c565b602457600080fd5b603f565b6000803090506000813b9050600081149250505090565b603f80604c6000396000f3fe6080604052600080fdfea26469706673582212209b402e711d4609798f6713ca1688a0dec3bc36ccc6e5618818852fe445760e9c64736f6c634300060b0033";
    static readonly abi: {
        inputs: never[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): ExtCodeSizeTestInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ExtCodeSizeTest;
}
